int NumberOfDaysRequired(vector<int> &weights, int capacity){
    int days=1, load=0;
    for(int i=0; i<weights.size(); i++){
        load+=weights[i];
        if(load>capacity){
            days++;
            load=0;
            load+=weights[i];
        }
    }
    return days;
}
int MaximumWeight(vector<int> &weights){
    int maximum=INT_MIN;
    for(int i=0; i<weights.size(); i++){
        maximum=max(maximum, weights[i]);
    }
    return maximum;
}
int TotalWeight(vector<int> &weights){
    int sum=0;
    for(int i=0; i<weights.size(); i++){
        sum+=weights[i];
    }
    return sum;
}
int shipWithinDays(vector<int>& weights, int days) {
    int low=MaximumWeight(weights), high=TotalWeight(weights);
    int ans=-1;
    while(low<=high){
        int mid=(low+high)/2;
        int daysRequired=NumberOfDaysRequired(weights, mid);
        if(daysRequired<=days){
            ans=mid;
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return ans;
}
