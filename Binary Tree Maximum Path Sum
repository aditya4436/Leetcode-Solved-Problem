/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int MaximumSum(TreeNode *root, int &maximum){
        if(root==NULL){
            return 0;
        }
        int leftSum=max(0, MaximumSum(root->left, maximum));
        int rightSum=max(0, MaximumSum(root->right, maximum));
        maximum=max(maximum, leftSum+rightSum+root->val);
        return root->val+max(leftSum, rightSum);
    }
public:
    int maxPathSum(TreeNode* root) {
        int maximum=INT_MIN;
        MaximumSum(root, maximum);
        return maximum;
    }
};
